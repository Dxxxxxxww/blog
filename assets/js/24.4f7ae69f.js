(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{224:function(l,r,p){"use strict";p.r(r);var a=p(0),s=Object(a.a)({},(function(){var l=this,r=l.$createElement,p=l._self._c||r;return p("ContentSlotsDistributor",{attrs:{"slot-key":l.$parent.slotKey}},[p("h1",{attrs:{id:"rollup"}},[p("a",{staticClass:"header-anchor",attrs:{href:"#rollup"}},[l._v("#")]),l._v(" rollup")]),l._v(" "),p("p",[l._v("rollup 是一款 esm 打包器，诸如一些 HMR 这种高级特性，rollup 并不支持。")]),l._v(" "),p("p",[l._v("rollup 并不是要替代 webpack，而是提供一个充分利用 esm 各项特性的高效打包器。webpack 大而全，rollup 小而美。")]),l._v(" "),p("p",[l._v("rollup 默认会开启 tree-shaking。")]),l._v(" "),p("p",[l._v("插件是 rollup 的唯一扩展方式。不像 webpack 那样，有 loader，plugins， optimization")]),l._v(" "),p("h2",{attrs:{id:"rollup-配置文件"}},[p("a",{staticClass:"header-anchor",attrs:{href:"#rollup-配置文件"}},[l._v("#")]),l._v(" rollup 配置文件")]),l._v(" "),p("p",[l._v("rollup 同样支持配置文件的形式进行打包，只需要在根目录下新建 rollup.config.js。rollup 会对配置文件做额外处理，所以配置文件中可以使用 esm 。")]),l._v(" "),p("p",[l._v("若要使用配置文件，执行的时候需要加上 --config 参数")]),l._v(" "),p("div",{staticClass:"language-js extra-class"},[p("pre",{pre:!0,attrs:{class:"language-js"}},[p("code",[l._v("npm rollup "),p("span",{pre:!0,attrs:{class:"token operator"}},[l._v("--")]),l._v("config\n")])])]),p("h2",{attrs:{id:"plugins"}},[p("a",{staticClass:"header-anchor",attrs:{href:"#plugins"}},[l._v("#")]),l._v(" plugins")]),l._v(" "),p("h3",{attrs:{id:"rollup-plugin-node-resolve"}},[p("a",{staticClass:"header-anchor",attrs:{href:"#rollup-plugin-node-resolve"}},[l._v("#")]),l._v(" rollup-plugin-node-resolve")]),l._v(" "),p("p",[l._v("rollup 不能像 webpack 那样通过名称导入 npm 包，而是只能按照文件路径导入，rollup-plugin-node-resolve 可以抹平这种差异。")]),l._v(" "),p("h3",{attrs:{id:"rollup-plugin-commonjs"}},[p("a",{staticClass:"header-anchor",attrs:{href:"#rollup-plugin-commonjs"}},[l._v("#")]),l._v(" rollup-plugin-commonjs")]),l._v(" "),p("p",[l._v("rollup 默认只支持 esm，但是有大量的包使用的是 cmj，这个插件可以让 rollup 支持 cmj")]),l._v(" "),p("h2",{attrs:{id:"code-splitting"}},[p("a",{staticClass:"header-anchor",attrs:{href:"#code-splitting"}},[l._v("#")]),l._v(" code splitting")]),l._v(" "),p("p",[l._v("新版的 rollup 已经支持 code splitting 了。")]),l._v(" "),p("h2",{attrs:{id:"rollup-与-webpack-选择"}},[p("a",{staticClass:"header-anchor",attrs:{href:"#rollup-与-webpack-选择"}},[l._v("#")]),l._v(" rollup 与 webpack 选择")]),l._v(" "),p("p",[l._v("rollup：开发库。")]),l._v(" "),p("p",[l._v("rollup 缺点：")]),l._v(" "),p("ol",[p("li",[l._v("加载非 esm 的第三方模块比较复杂，需要配置插件；")]),l._v(" "),p("li",[l._v("模块最终都被打包到一个函数中，无法实现 hmr；")]),l._v(" "),p("li",[l._v("浏览器环境中，代码拆分功能以来 amd。")])]),l._v(" "),p("p",[l._v("rollup 优点：")]),l._v(" "),p("ol",[p("li",[l._v("输出更加扁平，执行效率高；")]),l._v(" "),p("li",[l._v("自动移除未引用代码；")]),l._v(" "),p("li",[l._v("打包结果完全可读。")])]),l._v(" "),p("p",[l._v("在开发应用程序的时候，需要大量引入第三方包，并且需要分包，hmr 这些特性。所以需要 webpack。")]),l._v(" "),p("p",[l._v("如果是开发库的话，rollup 就很实用。因为它的优点都很有必要，缺点可以忽略。")])])}),[],!1,null,null,null);r.default=s.exports}}]);