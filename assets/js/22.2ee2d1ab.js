(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{222:function(s,t,a){"use strict";a.r(t);var e=a(0),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"常见的-webpack5-配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见的-webpack5-配置"}},[s._v("#")]),s._v(" 常见的 webpack5 配置")]),s._v(" "),a("p",[s._v("webpack 是一个模块打包器（bundler），它能将多个 js 文件打包成一个文件。对于其他资源来说，webpack 就需要借助对应的 loader 来进行资源转化及加载。")]),s._v(" "),a("p",[s._v("这里只是记录一下常用的配置，具体配置写法去官方文档里查询。"),a("b",[s._v("注：带 * 则表示 webpack5 中的新修改项目")])]),s._v(" "),a("h2",{attrs:{id:"require"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#require"}},[s._v("#")]),s._v(" * require")]),s._v(" "),a("p",[s._v("webpack5 中 require 导入的是模块对象，其 default 才是真正的路径。")]),s._v(" "),a("ol",[a("li",[s._v("require('xx').default")]),s._v(" "),a("li",[s._v("在对应 loader 的 options 中配置 esModule: false")]),s._v(" "),a("li",[s._v("使用 import 导入资源")])]),s._v(" "),a("h2",{attrs:{id:"context"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#context"}},[s._v("#")]),s._v(" context")]),s._v(" "),a("p",[s._v("The base directory, an absolute path, for resolving entry points and loaders from the configuration.")]),s._v(" "),a("p",[s._v("使用绝对路径定义基本目录，用于从配置中解析 entry 。")]),s._v(" "),a("p",[s._v("entry 的相对路径就是相对于 context 而言的。")]),s._v(" "),a("h2",{attrs:{id:"output"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#output"}},[s._v("#")]),s._v(" output")]),s._v(" "),a("h3",{attrs:{id:"output-publicpath"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#output-publicpath"}},[s._v("#")]),s._v(" output.publicPath")]),s._v(" "),a("p",[s._v("定义 index.html 引用的资源的基本路径")]),s._v(" "),a("h2",{attrs:{id:"loader"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#loader"}},[s._v("#")]),s._v(" Loader")]),s._v(" "),a("p",[s._v("对特定类型的文件做转换处理。像 css，图片，字体等等。工作时机确定 -> 在读取文件内容时。在 module 下配置。")]),s._v(" "),a("h3",{attrs:{id:"css-相关的-loader"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css-相关的-loader"}},[s._v("#")]),s._v(" css 相关的 loader")]),s._v(" "),a("p",[s._v("css 相关的 loader 有以下几种：")]),s._v(" "),a("ul",[a("li",[s._v("css-loader")]),s._v(" "),a("li",[s._v("style-loader")]),s._v(" "),a("li",[s._v("less-loader")]),s._v(" "),a("li",[s._v("postcss-loader")])]),s._v(" "),a("p",[s._v("loader 执行顺序是从右往左，从下往上。所以编写顺序应该是：")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// postcss 使用 autoprefixer 来加前缀")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// postcss-preset-env 预设了很多 postcss 所需的插件。 xx-preset-env 预设插件集")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// *.css")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"style-loader"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"css-loader"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"postcss-loader"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// *.less")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"style-loader"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"css-loader"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"postcss-loader"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"less-loader"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[s._v("/\\.css$/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    use"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            loader"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'css-loader'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// css 中又导入了其他css文件就需要这样处理")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 遇到需要被之前的 loader 再处理的文件的话，就修改这个步进值")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1 就表示 只需要前面一个 -> postcss-loader。 2 表示前面两个，以此类推")]),s._v("\n                importLoaders"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// background-url")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// webpack5 中 require 导入的图片是一个模块对象，其 default 才是真正的路径")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果想要 require 直接导入路径，则使用以下配置")]),s._v("\n                esModule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'postcss-loader'")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("h3",{attrs:{id:"图片，字体相关-loader"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#图片，字体相关-loader"}},[s._v("#")]),s._v(" 图片，字体相关 loader")]),s._v(" "),a("ul",[a("li",[s._v("file-loader")])]),s._v(" "),a("p",[s._v("拷贝图片，分开请求。可以修改打包后的图片名称。")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[s._v("/\\.(png|svg|gif|jpe?g)$/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    use"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            loader"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'file-loader'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                esModule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 不转为 esm")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("ul",[a("li",[s._v("url-loader")])]),s._v(" "),a("p",[s._v("将图片以 base64 的方式放入代码中，减少请求次数。")]),s._v(" "),a("p",[s._v("url-loader 中可以调用 file-loader，设置图片大小上限，超出则用 file-loader 拷贝图片")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[s._v("/\\.(png|svg|gif|jpe?g)$/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    use"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            loader"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'url-loader'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                esModule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 不转为 esm")]),s._v("\n                limit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("25")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1024")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 25kb")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("h3",{attrs:{id:"assest"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#assest"}},[s._v("#")]),s._v(" * assest")]),s._v(" "),a("p",[s._v("asset module type")]),s._v(" "),a("ol",[a("li",[s._v("asset/resource -> file-loader")]),s._v(" "),a("li",[s._v("asset/inline -> url-loader")]),s._v(" "),a("li",[s._v("asset/source -> raw-loade 不常用")]),s._v(" "),a("li",[s._v("asset -> 自动选择是 base64 还是单独导出一个文件(就跟 url-loader 使用 limit 来做判断一样)")])]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 图片")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[s._v("/\\.(png|svg|gif|jpe?g)$/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'asset/resource'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 字体")]),s._v("\noutput"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 统一指定导出目录")]),s._v("\n    assetModuleFilename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'images/[hash][ext][query]'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[s._v("/\\.(ttf|woff2?)$/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'asset/resource'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 指定特定目录")]),s._v("\n    generator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        filename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'static/[hash][ext][query]'")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("h3",{attrs:{id:"ts-相关-loader"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ts-相关-loader"}},[s._v("#")]),s._v(" ts 相关 loader")]),s._v(" "),a("ul",[a("li",[s._v("ts-loader: ts 有语法错误时可以在编译期间报错。做语法校验。")]),s._v(" "),a("li",[s._v("babel-loader: ts 语法错误不会在编译期间报错，但是可以将一些 js 高阶语法做兼容处理。需要在 preset 中加上@babel/preset-typescript")])]),s._v(" "),a("p",[s._v("解决办法: 使用 babel-loader 并在 npm 中添加脚本")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("scriptes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'build'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'npm run ts && webpack'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ts'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'tsc --noEmit'")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// noEmit 指的是不生成转换 js 文件。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("h2",{attrs:{id:"browserslist"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#browserslist"}},[s._v("#")]),s._v(" browserslist")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://caniuse.com/usage-table",target:"_blank",rel:"noopener noreferrer"}},[s._v("browsers-use"),a("OutboundLink")],1)]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 选择需要兼容的浏览器范围")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// package.json")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 数组中项是 或关系")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"browserslist"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"> 1%"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 市场占有率大于 1% 的浏览器 caniuse -> Browser usage table")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"last 2 versions"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"not ie <= 8"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// .browserslistrc")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v("\nlast "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" versions\nnot ie "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v("\n")])])]),a("h2",{attrs:{id:"plugin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#plugin"}},[s._v("#")]),s._v(" plugin")]),s._v(" "),a("p",[s._v("可以做更多事情，工作时机不固定。在 plugins 下配置。")]),s._v(" "),a("h3",{attrs:{id:"clean-webpack-plugin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#clean-webpack-plugin"}},[s._v("#")]),s._v(" clean-webpack-plugin")]),s._v(" "),a("p",[s._v("用来删除/清理你的构建文件夹。")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("plugins"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("CleanWebpackPlugin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("h3",{attrs:{id:"html-webpack-plugin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#html-webpack-plugin"}},[s._v("#")]),s._v(" html-webpack-plugin")]),s._v(" "),a("p",[s._v("简化了 HTML 文件的创建，为 webpack 打包服务。可自定 html 模板文件。")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("plugins"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HtmlWebpackPlugin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("h3",{attrs:{id:"webpack-defineplugin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webpack-defineplugin"}},[s._v("#")]),s._v(" webpack.DefinePlugin")]),s._v(" "),a("p",[s._v("定义 webpack 全局变量")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("plugins"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("webpack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("DefinePlugin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("BASE_SRC")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\"./\"'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// DefinePlugin 这里需要注意字符串要带上引号")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("h3",{attrs:{id:"copy-webpack-plugin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#copy-webpack-plugin"}},[s._v("#")]),s._v(" copy-webpack-plugin")]),s._v(" "),a("p",[s._v("拷贝文件，用来拷贝静态文件")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("plugins"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("CopyWebpackPlugin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("h3",{attrs:{id:"minicssextractplugin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#minicssextractplugin"}},[s._v("#")]),s._v(" * MiniCssExtractPlugin")]),s._v(" "),a("p",[s._v("文档上说 v5 版本才能使用，但是 v4 也能使用。抽离 css 成单独文件。更低版本可以使用 extract-text-webpack-plugin，v4+版本不推荐使用，会有问题。")]),s._v(" "),a("h3",{attrs:{id:"cssminimizerwebpackplugin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cssminimizerwebpackplugin"}},[s._v("#")]),s._v(" * CssMinimizerWebpackPlugin")]),s._v(" "),a("p",[s._v("对 css 文件进行压缩。v4 版本下可以使用 optimize-css-assets-webpack-plugin，此插件在 v5 版本无法压缩。")]),s._v(" "),a("h3",{attrs:{id:"terserwebpackplugin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#terserwebpackplugin"}},[s._v("#")]),s._v(" TerserWebpackPlugin")]),s._v(" "),a("p",[s._v("压缩，丑化 js 代码。v5 版本已内置 TerserWebpackPlugin 插件。之前可能更多的是使用 uglify-js，但是 uglify-es 不再维护了，uglify-js 也不支持 es6+了。")]),s._v(" "),a("h3",{attrs:{id:"moduleconcatenationplugin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#moduleconcatenationplugin"}},[s._v("#")]),s._v(" ModuleConcatenationPlugin")]),s._v(" "),a("p",[s._v("scope hoisting,也可以说是合并模块。会“提升”或将所有模块的作用域连接到一个闭包中，从而让代码在浏览器中有更快的执行时间。生产模式已经默认配置。依赖 ESM 在编译时导出/导入的静态分析，所以在 web 端最好都是用 ESM 而非 CMJ。")]),s._v(" "),a("h3",{attrs:{id:"purgecss-webpack-plugin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#purgecss-webpack-plugin"}},[s._v("#")]),s._v(" purgecss-webpack-plugin")]),s._v(" "),a("p",[s._v("css tree-shaking 插件")]),s._v(" "),a("h3",{attrs:{id:"compressionwebpackplugin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#compressionwebpackplugin"}},[s._v("#")]),s._v(" CompressionWebpackPlugin")]),s._v(" "),a("p",[s._v("优化手段。")]),s._v(" "),a("p",[s._v("开启压缩，默认 gzip 算法。把资源压缩好给服务器，当浏览器支持 gzip 时，就可以使用已经压缩过的代码。")]),s._v(" "),a("h4",{attrs:{id:"compressionwebpackplugin-minratio"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#compressionwebpackplugin-minratio"}},[s._v("#")]),s._v(" CompressionWebpackPlugin.minRatio")]),s._v(" "),a("p",[s._v("压缩比，默认 0.8。如果设置太小，压缩算法没办法做到的话就不会去压缩。一般使用默认值 0.8 就行了。")]),s._v(" "),a("h3",{attrs:{id:"inline-chunk-html-plugin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#inline-chunk-html-plugin"}},[s._v("#")]),s._v(" inline-chunk-html-plugin")]),s._v(" "),a("p",[s._v("将 js 代码注入 index.html 文件中。对于一些代码量少的文件，如果通过 script 外链的形式发请求来载入的话有点浪费，通过这个插件可以将代码量少的文件直接注入到 index.html 文件中。减少请求。")]),s._v(" "),a("h3",{attrs:{id:"speed-measure-webpack-plugin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#speed-measure-webpack-plugin"}},[s._v("#")]),s._v(" speed-measure-webpack-plugin")]),s._v(" "),a("p",[s._v("分析 webpack-plugin，webpack-loader 的耗时。与 MiniCssExtractPlugin 有兼容问题，需要将 MiniCssExtractPlugin 降到 1.x 版本。")]),s._v(" "),a("h3",{attrs:{id:"webpack-bundle-analyzer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webpack-bundle-analyzer"}},[s._v("#")]),s._v(" webpack-bundle-analyzer")]),s._v(" "),a("p",[s._v("打包文件大小分析。")]),s._v(" "),a("h3",{attrs:{id:"hotmodulereplacementplugin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hotmodulereplacementplugin"}},[s._v("#")]),s._v(" HotModuleReplacementPlugin")]),s._v(" "),a("p",[s._v("HMR 的插件")]),s._v(" "),a("h3",{attrs:{id:"commonschunkplugin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#commonschunkplugin"}},[s._v("#")]),s._v(" CommonsChunkPlugin")]),s._v(" "),a("p",[s._v("通过将公共模块从 bundle 中分离出来，得到的块文件可以在最初加载一次，并存储在缓存中供以后使用。这将导致页面速度优化，因为浏览器可以快速地从缓存提供共享代码，而不是在访问新页面时强制加载更大的包。")]),s._v(" "),a("h2",{attrs:{id:"babel"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#babel"}},[s._v("#")]),s._v(" babel")]),s._v(" "),a("p",[s._v("对 js 做兼容处理")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[s._v("/\\.js$/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    use"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'babel-loader'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// babel.config.js")]),s._v("\n\nmodule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    presets"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'@babel/preset-env'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("h3",{attrs:{id:"polyfill"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#polyfill"}},[s._v("#")]),s._v(" * polyfill")]),s._v(" "),a("p",[s._v("对 babel 一些不能做转换的语法补充。webpack4 默认携带，webpack5 为了优化打包体积默认移除，需要用时添加即可。")]),s._v(" "),a("p",[s._v("babel7 之后只需要添加 core-js regenerator-runtime 即可。")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    presets"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"@babel/preset-env"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false: 不对当前的 js 做 polyfill 处理")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// usage：依据代码中所使用到的代码做兼容处理")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// entry：依据 browserslist 选择的浏览器范围做处理")]),s._v("\n            useBuiltIns"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"usage"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 安装的 corejs 版本")]),s._v("\n            corejs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("p",[s._v("如果一些第三方包已经使用了 @babel/polyfill，再在配置中使用 usage 做处理会有问题，这时候需要在 webpack 配置中给 babel-loader 添加 exclude: /node_modules/")]),s._v(" "),a("h3",{attrs:{id:"如何根据模式有选择的使用-babel-插件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何根据模式有选择的使用-babel-插件"}},[s._v("#")]),s._v(" 如何根据模式有选择的使用 babel 插件")]),s._v(" "),a("p",[s._v("可以在 webpack 配置文件中给 process.env 手动挂载值，然后在 babelrc 中通过 process.env. 获取。如果单纯的通过 webpack.mode 设置的 process.env.NODE_ENV，在诸如 babelrc 这样的非模块文件中无法获取到。")]),s._v(" "),a("h4",{attrs:{id:"why？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#why？"}},[s._v("#")]),s._v(" why？")]),s._v(" "),a("p",[s._v("究其原因是，在 webpack.mode 中设置模式，是通过 DefinePlugin 给 process.env.NODE_ENV 的值设置。这种全局变量在非模块配置文件中无法获取。而又因为配置文件的执行是归 webpack 控制，所以在 webpack 配置文件 中手动添加变量，是可以获取到的。也就是说 DefinePlugin 设置的全局变量只能在模块中使用。")]),s._v(" "),a("h2",{attrs:{id:"output-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#output-2"}},[s._v("#")]),s._v(" output")]),s._v(" "),a("h3",{attrs:{id:"publicpath"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#publicpath"}},[s._v("#")]),s._v(" publicPath")]),s._v(" "),a("p",[s._v("规定了 index.html 如何去查找资源(js,css 等等)，域名 + publicPath + 资源")]),s._v(" "),a("h2",{attrs:{id:"webpack-dev-server"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webpack-dev-server"}},[s._v("#")]),s._v(" webpack-dev-server")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://webpack.js.org/guides/development/#using-watch-mode",target:"_blank",rel:"noopener noreferrer"}},[s._v("详细"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("开发模式 --watch / watch: true 的不足：")]),s._v(" "),a("ol",[a("li",[s._v("所有源码都会重新编译；")]),s._v(" "),a("li",[s._v("每次编译成功都需要进行文件读写；")]),s._v(" "),a("li",[s._v("不能实现局部刷新。")])]),s._v(" "),a("p",[s._v("使用 webpack-dev-server 就可以解决上述问题。vue, react 都是使用这个作为服务。")]),s._v(" "),a("h3",{attrs:{id:"webpack-dev-middleware"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webpack-dev-middleware"}},[s._v("#")]),s._v(" webpack-dev-middleware")]),s._v(" "),a("p",[s._v("是一个包装器，它会将 webpack 处理过的文件发送给服务器。这在自定义服务内部使用，来达到自定义灵活度更高的服务的目的。相当于就是通过这个中间件来联系自定义 node 服务与 webpack。")]),s._v(" "),a("p",[s._v("vue cli2 生成的 vue 项目 的 dev-server.js 就是这个。")]),s._v(" "),a("h3",{attrs:{id:"webpack-hot-middleware"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webpack-hot-middleware"}},[s._v("#")]),s._v(" webpack-hot-middleware")]),s._v(" "),a("p",[s._v("热更新中间件，配合 webpack-dev-middleware 使用")]),s._v(" "),a("h2",{attrs:{id:"hmr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hmr"}},[s._v("#")]),s._v(" HMR")]),s._v(" "),a("p",[s._v("开启配置：设置 hot: true, hotOnly: true，再配上 HotModuleReplacementPlugin")]),s._v(" "),a("p",[s._v("模块热更新，只更新改变的模块，而不会使整个页面都刷新。开启 HMR 之后，css 会直接启动模块热更新，因为 loader 已经做了这方面工作。为什么 js 不行，因为 js 模块是没有任何规律的，可能导出对象/变量/常量/函数，并且对于这些导出的东西的使用也各不相同。对于 css 而言，只需要把新的样式替换上去就行了。")]),s._v(" "),a("p",[s._v("使用 vue/react 为什么可以呢？因为这两者的框架对于导出有着规则限制，是有一定规律的。框架内部已经提供好了通用 HMR 解决方案，vue-loader 内置了 hmr 的代码，react 则是通过 babel-preset，详细可以查看 webpack 文档 guides 中的 hmr 模块。")]),s._v(" "),a("p",[s._v("hot 是 webpack-dev-server 的 hmr 配置。 webpack-hot-middleware 是 webpack-dev-middleware 设置的自定义服务的 hmr 配置。")]),s._v(" "),a("h2",{attrs:{id:"devserver"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#devserver"}},[s._v("#")]),s._v(" devServer")]),s._v(" "),a("p",[s._v("webpack-dev-server 的配置选项")]),s._v(" "),a("h3",{attrs:{id:"devserver-publicpath"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#devserver-publicpath"}},[s._v("#")]),s._v(" devServer.publicPath")]),s._v(" "),a("p",[s._v("指定本地服务所在的目录。")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 配置目录之后")]),s._v("\ndevServer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("publicPath "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/lg'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 本地域名访问")]),s._v("\nhttps"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("localhost"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("lg\n")])])]),a("p",[s._v("大部分情况下，output.publicPath 与 devServer.publicPath 需要设置为相同的值。")]),s._v(" "),a("h3",{attrs:{id:"devserver-contentbase"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#devserver-contentbase"}},[s._v("#")]),s._v(" * devServer.contentBase")]),s._v(" "),a("p",[s._v("webpack5 文档中已不存在")]),s._v(" "),a("p",[s._v("规定一些不被 webpack 打包的文件，但是在 index.html 中引用的资源去哪查找。绝对路径。")]),s._v(" "),a("h3",{attrs:{id:"devserver-proxy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#devserver-proxy"}},[s._v("#")]),s._v(" devServer.proxy")]),s._v(" "),a("p",[s._v("跨域代理，转发请求。")]),s._v(" "),a("h3",{attrs:{id:"devserver-compress"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#devserver-compress"}},[s._v("#")]),s._v(" devServer.compress")]),s._v(" "),a("p",[s._v("开发服务启用 gzip 压缩。")]),s._v(" "),a("h2",{attrs:{id:"resolve"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#resolve"}},[s._v("#")]),s._v(" resolve")]),s._v(" "),a("h3",{attrs:{id:"resolve-alias"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#resolve-alias"}},[s._v("#")]),s._v(" resolve.alias")]),s._v(" "),a("p",[s._v("别名")]),s._v(" "),a("h3",{attrs:{id:"resolve-extensions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#resolve-extensions"}},[s._v("#")]),s._v(" resolve.extensions")]),s._v(" "),a("p",[s._v("文件引入时自动补全后缀")]),s._v(" "),a("h3",{attrs:{id:"resolve-mainfiles"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#resolve-mainfiles"}},[s._v("#")]),s._v(" resolve.mainFiles")]),s._v(" "),a("p",[s._v("引入文件夹时默认查找目录下的指定文件，默认值是 index。这也是为什么我们在文件夹下写 index 文件就能成功引入的原因。")]),s._v(" "),a("h3",{attrs:{id:"resolve-modules"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#resolve-modules"}},[s._v("#")]),s._v(" resolve.modules")]),s._v(" "),a("p",[s._v("引入模块时默认查找指定目录，默认值时 node_modules。")]),s._v(" "),a("h2",{attrs:{id:"mode"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mode"}},[s._v("#")]),s._v(" mode")]),s._v(" "),a("p",[s._v("告诉 webpack 使用哪种模式的配置。'development' | 'production'")]),s._v(" "),a("h2",{attrs:{id:"devtool"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#devtool"}},[s._v("#")]),s._v(" devtool")]),s._v(" "),a("p",[s._v("配置 source-map。默认配置跟随 mode。")]),s._v(" "),a("p",[s._v("source-map：加密代码与源代码的映射关系，方便调试定位源代码。")]),s._v(" "),a("p",[s._v("hidden-source-map：生产环境可以配置成这个。与 source-map 相同，但不向 bundle 添加引用注释。可以通过 SourceMaps 从错误报告映射错误堆栈跟踪，并且浏览器开发工具查看不到源代码。")]),s._v(" "),a("p",[s._v("nosources-source-map：生产环境可以配置成这个。生成的 map 文件不包含源码，但是会正确提示错误的行数。但是项目的目录结构和文件名称会暴露在 Sources 面板")]),s._v(" "),a("h2",{attrs:{id:"optimization"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#optimization"}},[s._v("#")]),s._v(" optimization")]),s._v(" "),a("p",[s._v("优化")]),s._v(" "),a("h3",{attrs:{id:"optimization-splitchunks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#optimization-splitchunks"}},[s._v("#")]),s._v(" optimization.splitChunks")]),s._v(" "),a("p",[s._v("优化手段。")]),s._v(" "),a("p",[s._v("code splitting，代码分割，可以将业务代码和第三方包分离。这样做的好处是，基本不变动的第三方包在用户端会有缓存，当我们软件更新时，用户端只需要下载更新业务代码。")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("splitChunks"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      chunks"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'all'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 'async'， 默认值为 'initial'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[s._v("react 中只是简单的设置")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("splitChunks"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    chunks"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"all"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" isEnvDevelopment"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n")])])]),a("p",[s._v("vue 中会使用 cacheGroups 将第三方包改名为 vender")]),s._v(" "),a("h4",{attrs:{id:"动态-import"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#动态-import"}},[s._v("#")]),s._v(" 动态 import")]),s._v(" "),a("p",[s._v("动态 import 可以实现懒加载。动态 import 的文件会自动拆包(splitChunks)，因为动态请求时，文件不一定已经加载完成，所以不能与其他代码打包在一起。")]),s._v(" "),a("h4",{attrs:{id:"splitchunks-minisize"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#splitchunks-minisize"}},[s._v("#")]),s._v(" splitChunks.miniSize")]),s._v(" "),a("p",[s._v("如果拆包后的文件达不到设置值，则不会拆包。也就是说，设置 miniSize 后，拆分后文件必须大于这个值才会拆分。")]),s._v(" "),a("h4",{attrs:{id:"splitchunks-maxsize"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#splitchunks-maxsize"}},[s._v("#")]),s._v(" splitChunks.maxSize")]),s._v(" "),a("p",[s._v("体积大于 maxSize 才进行拆分。")]),s._v(" "),a("p",[s._v("maxSize 的优先级高于 maxInitialRequest/maxAsyncRequests。实际的优先级是 maxInitialRequest/maxAsyncRequests < maxSize < minSize。")]),s._v(" "),a("h4",{attrs:{id:"splitchunks-minchunks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#splitchunks-minchunks"}},[s._v("#")]),s._v(" splitChunks.minChunks")]),s._v(" "),a("p",[s._v("至少要被引用 x 次。优先级没有 maxSize，miniSize 高。")]),s._v(" "),a("h4",{attrs:{id:"splitchunks-cachegroups"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#splitchunks-cachegroups"}},[s._v("#")]),s._v(" splitChunks.cacheGroups")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("cacheGroups"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        defaultVendors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 当 webpack 处理文件路径时，在 Unix 系统中总是包含/，在 Windows 系统中总是包含\\。这就是为什么在{cacheGroup}中使用[\\\\/]。")]),s._v("\n          test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[s._v("/[\\\\/]node_modules[\\\\/]/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n          "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果有文件同时满足两个设置，则需要使用优先级来判断使用哪个")]),s._v("\n          priority"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n          reuseExistingChunk"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n          "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 修改拆包后的文件名")]),s._v("\n          filename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'js/[id]_vender.js'")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          minChunks"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n          priority"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n          reuseExistingChunk"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n")])])]),a("h3",{attrs:{id:"optimization-runtimechunk"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#optimization-runtimechunk"}},[s._v("#")]),s._v(" optimization.runtimeChunk")]),s._v(" "),a("p",[s._v("把一些与文件源码无关的，webpack 打包生成的代码单独抽离成一个文件。")]),s._v(" "),a("h3",{attrs:{id:"optimization-minimize"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#optimization-minimize"}},[s._v("#")]),s._v(" optimization.minimize")]),s._v(" "),a("p",[s._v("告诉 webpack 使用 TerserPlugin 或在 optimization.minimizer 中指定的插件来最小化 bundle。")]),s._v(" "),a("h3",{attrs:{id:"optimization-minimizer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#optimization-minimizer"}},[s._v("#")]),s._v(" optimization.minimizer")]),s._v(" "),a("p",[s._v("压缩模块，对文件进行压缩。对于 js 文件来说可以使用 TerserWebpackPlugin，css 文件可以使用 CssMinimizerWebpackPlugin。")]),s._v(" "),a("h2",{attrs:{id:"tree-shaking"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tree-shaking"}},[s._v("#")]),s._v(" tree-shaking")]),s._v(" "),a("p",[s._v("优化手段。")]),s._v(" "),a("p",[s._v("基于 ESM 的静态分析实现，将一些不用的代码（导出了，但是没有地方有导入使用，dead-code）从打包流程中剔除。它是一组搭配使用后的优化效果，不是某个配置选项，在生产模式下自动启用。")]),s._v(" "),a("h4",{attrs:{id:"usedexports"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#usedexports"}},[s._v("#")]),s._v(" usedExports")]),s._v(" "),a("p",[s._v("optimization.usedExports，标记出哪些代码没有被使用，清理还需要通过设置 optimization.minimize，通过 TerserWebpackPlugin 插件压缩代码。")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//...")]),s._v("\n    optimization"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        usedExports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        minimizer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TerserPlugin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("h4",{attrs:{id:"sideeffects"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sideeffects"}},[s._v("#")]),s._v(" sideEffects")]),s._v(" "),a("p",[s._v("optimization.sideEffects 开启。 package.json sideEffects 标记保留文件。")]),s._v(" "),a("p",[s._v("使用 sideEffects 的前提是确保文件中没有副作用代码。因为如果有副作用代码，而被删除了的话，就会导致程序出错。这里的副作用代码指除了导出成员外所做的事情(比如在 window 上挂载)。")]),s._v(" "),a("p",[s._v("false 为删除副作用代码，true 为保留。数组中配置路径，可以有选择的保留哪些副作用，可以通过这种方式来选择保留一些需要的 js 和 css 代码。不过 一般而言，可以在 配置 css 相关 loader 的地方，跟 test, use 同级下增加 sideEffects: true，来保留 css。")]),s._v(" "),a("p",[s._v("这两种不是替代的关系。")]),s._v(" "),a("p",[s._v("tree-shaking 的前提是必须使用 ESM。但是 babel 中的 preset-env 会将 ESM 转换成 CMJ。webpack 拿到 转换后的代码，就不能执行 tree-shaking 了(最新版 babel 已经支持 ESM，它会禁用 ESM->CMJ 的转换，所以 webpack 能使用 tree-shaking)。")]),s._v(" "),a("h3",{attrs:{id:"prefetch-preload"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#prefetch-preload"}},[s._v("#")]),s._v(" prefetch preload")]),s._v(" "),a("p",[s._v("prefetch：预加载，在浏览器空闲时间加载文件。")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* webpackPrefetch: true */")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./path/to/LoginModal.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("p",[s._v("preload：会与父块并行加载。")]),s._v(" "),a("p",[s._v("区别：")]),s._v(" "),a("ol",[a("li",[s._v("preload chunk 会在父 chunk 加载时，以并行方式开始加载，prefetch chunk 会在父 chunk 加载结束后开始加载。")]),s._v(" "),a("li",[s._v("preload chunk 具有中等优先级，并立即下载。prefetch chunk 在浏览器闲置时下载。")]),s._v(" "),a("li",[s._v("preload chunk 会在父 chunk 中立即请求，用于当下时刻。prefetch chunk 会用于未来的某个时刻。")]),s._v(" "),a("li",[s._v("浏览器支持程度不同。")])]),s._v(" "),a("h2",{attrs:{id:"externals"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#externals"}},[s._v("#")]),s._v(" externals")]),s._v(" "),a("p",[s._v("优化手段。")]),s._v(" "),a("p",[s._v("可以将一些基本不变的包排除在打包范围外，放在服务器上请求，常与 CDN 配合使用。排除在外的文件，需要在 public/index.html 模板文件中添加资源在 cdn 上的地址。")]),s._v(" "),a("p",[s._v("这样做可以优化打包速度。对于部署在 cdn 上的包来说，一般也都是基本不变的资源，用户在请求一次之后后续都会有缓存的。")]),s._v(" "),a("p",[s._v("cdn 优点：通过中心平台的负载均衡、内容分发、调度等功能模块，使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率。")]),s._v(" "),a("h2",{attrs:{id:"dll"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dll"}},[s._v("#")]),s._v(" dll")]),s._v(" "),a("p",[s._v("优化手段。")]),s._v(" "),a("p",[s._v("仅做了解，在 webpackv4 起已经不需要通过 dll 来优化打包速度了。vue/react 中已移除 dll 打包操作。")]),s._v(" "),a("p",[s._v("与 externals 排除包然后放在 cdn 上有点类似。将一些不常改变的包移动到单独的编译中，进行单独的打包操作(单独起一个项目，引入包进行打包操作)，生成 dll 库，后续可以直接引入。减少项目打包时间。")]),s._v(" "),a("h2",{attrs:{id:"webpack-打包库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webpack-打包库"}},[s._v("#")]),s._v(" webpack 打包库")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("output"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    filename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'xx.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// js 通用模块定义规范，能让 js 在所有环境下工作")]),s._v("\n    libraryTarget"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'umd'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 全局变量名，类似于 JQuery 的 $，库的变量方法都通过这里的设置来访问")]),s._v("\n    library"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'xx'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 一般都写 this，在 web 端指向 window")]),s._v("\n    globalObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'this'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("h2",{attrs:{id:"暴露-react-的-webpack-配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#暴露-react-的-webpack-配置"}},[s._v("#")]),s._v(" 暴露 react 的 webpack 配置")]),s._v(" "),a("p",[s._v("npm run eject")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// package.json")]),s._v("\nscript"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    eject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" react"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("scripts eject\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("h2",{attrs:{id:"暴露-vue-的-webpack-配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#暴露-vue-的-webpack-配置"}},[s._v("#")]),s._v(" 暴露 vue 的 webpack 配置")]),s._v(" "),a("p",[s._v("https://cli.vuejs.org/zh/guide/webpack.html#%E5%AE%A1%E6%9F%A5%E9%A1%B9%E7%9B%AE%E7%9A%84-webpack-%E9%85%8D%E7%BD%AE")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("vue inspect "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" output"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("js\n")])])]),a("h2",{attrs:{id:"其他-tips"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他-tips"}},[s._v("#")]),s._v(" 其他 tips")]),s._v(" "),a("ul",[a("li",[s._v("__dirname: 指向当前执行 js 文件的绝对路径，到文件夹为止。")]),s._v(" "),a("li",[s._v("path.join: 将传入的参数拼接成一个路径。会自动使用平台特定的分隔符把参数连接(自动加'/')，并规范化生成的路径。")]),s._v(" "),a("li",[s._v("path.resolve: 根据参数解析出一个绝对路径。根据参数从右往左，直到解析出一个绝对路径。")]),s._v(" "),a("li",[s._v("process.cwd: 当前执行 node 命令时候的文件夹地址。")]),s._v(" "),a("li",[s._v("如果 webpack 配置导出的是函数，其形参 env 的值可以就是 npm script 中的 --env 传入的值。")])])])}),[],!1,null,null,null);t.default=n.exports}}]);