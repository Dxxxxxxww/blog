(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{212:function(t,a,s){"use strict";s.r(a);var r=s(0),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"菜单选中的弧形处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#菜单选中的弧形处理"}},[t._v("#")]),t._v(" 菜单选中的弧形处理")]),t._v(" "),s("h2",{attrs:{id:"我的方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#我的方法"}},[t._v("#")]),t._v(" 我的方法")]),t._v(" "),s("ol",[s("li",[t._v("元素层级需要是 ul-li-div")]),t._v(" "),s("li",[t._v("给每个 li 添加背景色，而不是给 ul 添加；")]),t._v(" "),s("li",[t._v("给选中的 div 增加白色背景色，增加左边上下圆弧；")]),t._v(" "),s("li",[t._v("给相邻元素的 li 增加右下/右上圆弧。")])]),t._v(" "),s("h2",{attrs:{id:"其他方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其他方法"}},[t._v("#")]),t._v(" 其他方法")]),t._v(" "),s("p",[t._v("通过圆形伪类来做相邻两个元素的边角遮罩，而不是用 border-radius，再使用圆形伪类的阴影来隐藏相邻元素边角直角。")]),t._v(" "),s("p",[s("img",{attrs:{src:"/css/ddd.png",alt:"image"}})])])}),[],!1,null,null,null);a.default=e.exports}}]);